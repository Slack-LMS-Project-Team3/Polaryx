:global(.ProseMirror) {
  @apply p-12 px-8 sm:px-12;
}

:global(.ProseMirror) :global(.is-editor-empty):first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}
:global(.ProseMirror) :global(.is-empty)::before {
  content: attr(data-placeholder);
  float: left;
  color: hsl(var(--muted-foreground));
  pointer-events: none;
  height: 0;
}

/* Custom image styles */

:global(.ProseMirror) :global(img) {
  transition: filter 0.1s ease-in-out;

  &:hover {
    cursor: pointer;
    filter: brightness(90%);
  }

  &:global(.ProseMirror-selectednode) {
    outline: 3px solid #5abbf7;
    filter: brightness(90%);
  }
}

:global(.img-placeholder) {
  position: relative;

  &:before {
    content: "";
    box-sizing: border-box;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 36px;
    height: 36px;
    border-radius: 50%;
    border: 3px solid var(--novel-stone-200);
    border-top-color: var(--novel-stone-800);
    animation: spinning 0.6s linear infinite;
  }
}

@keyframes spinning {
  to {
    transform: rotate(360deg);
  }
}

/* Custom TODO list checkboxes â€“ shoutout to this awesome tutorial: https://moderncss.dev/pure-css-custom-checkbox-style/ */

:global(ul[data-type="taskList"]) :global(li) > :global(label) {
  margin-right: 0.2rem;
  user-select: none;
}

@media screen and (max-width: 768px) {
  :global(ul[data-type="taskList"]) :global(li) > :global(label) {
    margin-right: 0.5rem;
  }
}

:global(ul[data-type="taskList"]) :global(li) > :global(label) :global(input[type="checkbox"]) {
  -webkit-appearance: none;
  appearance: none;
  background-color: hsl(var(--background));
  margin: 0;
  cursor: pointer;
  width: 1.2em;
  height: 1.2em;
  position: relative;
  top: 5px;
  border: 2px solid hsl(var(--border));
  margin-right: 0.3rem;
  display: grid;
  place-content: center;

  &:hover {
    background-color: hsl(var(--accent));
  }

  &:active {
    background-color: hsl(var(--accent));
  }

  &::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em;
    transform-origin: center;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  }

  &:checked::before {
    transform: scale(1);
  }
}

:global(ul[data-type="taskList"]) :global(li[data-checked="true"]) > :global(div) > :global(p) {
  color: var(--muted-foreground);
  text-decoration: line-through;
  text-decoration-thickness: 2px;
}

/* Overwrite tippy-box original max-width */

:global(.tippy-box) {
  max-width: 400px !important;
}

:global(.ProseMirror):not(:global(.dragging)) :global(.ProseMirror-selectednode) {
  outline: none !important;
  background-color: var(--novel-highlight-blue);
  transition: background-color 0.2s;
  box-shadow: none;
}

:global(.drag-handle) {
  position: fixed !important;
  opacity: 1 !important;
  transition: opacity ease-in 0.2s !important;
  border-radius: 0.25rem !important;
  display: block !important;
  visibility: visible !important;

  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(0, 0, 0, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E") !important;
  background-size: calc(0.5em + 0.375rem) calc(0.5em + 0.375rem) !important;
  background-repeat: no-repeat !important;
  background-position: center !important;
  width: 1.2rem !important;
  height: 1.5rem !important;
  z-index: 999 !important;
  cursor: grab !important;
  background-color: rgba(200, 200, 200, 0.2) !important;

  &:hover {
    background-color: var(--novel-stone-100) !important;
    transition: background-color 0.2s !important;
  }

  &:active {
    background-color: var(--novel-stone-200) !important;
    transition: background-color 0.2s !important;
    cursor: grabbing !important;
  }

  &:global(.hide) {
    opacity: 1 !important;
    pointer-events: auto !important;
    display: block !important;
    visibility: visible !important;
  }

  @media screen and (max-width: 600px) {
    display: none !important;
    pointer-events: none !important;
  }
}

:global(.dark) :global(.drag-handle) {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 10 10' style='fill: rgba(255, 255, 255, 0.5)'%3E%3Cpath d='M3,2 C2.44771525,2 2,1.55228475 2,1 C2,0.44771525 2.44771525,0 3,0 C3.55228475,0 4,0.44771525 4,1 C4,1.55228475 3.55228475,2 3,2 Z M3,6 C2.44771525,6 2,5.55228475 2,5 C2,4.44771525 2.44771525,4 3,4 C3.55228475,4 4,4.44771525 4,5 C4,5.55228475 3.55228475,6 3,6 Z M3,10 C2.44771525,10 2,9.55228475 2,9 C2,8.44771525 2.44771525,8 3,8 C3.55228475,8 4,8.44771525 4,9 C4,9.55228475 3.55228475,10 3,10 Z M7,2 C6.44771525,2 6,1.55228475 6,1 C6,0.44771525 6.44771525,0 7,0 C7.55228475,0 8,0.44771525 8,1 C8,1.55228475 7.55228475,2 7,2 Z M7,6 C6.44771525,6 6,5.55228475 6,5 C6,4.44771525 6.44771525,4 7,4 C7.55228475,4 8,4.44771525 8,5 C8,5.55228475 7.55228475,6 7,6 Z M7,10 C6.44771525,10 6,9.55228475 6,9 C6,8.44771525 6.44771525,8 7,8 C7.55228475,8 8,8.44771525 8,9 C8,9.55228475 7.55228475,10 7,10 Z'%3E%3C/path%3E%3C/svg%3E");
}

/* Custom Youtube Video CSS */
:global(iframe) {
  border: 8px solid #ffd00027;
  border-radius: 4px;
  min-width: 200px;
  min-height: 200px;
  display: block;
  outline: 0px solid transparent;
}

:global(div[data-youtube-video]) > :global(iframe) {
  cursor: move;
  aspect-ratio: 16 / 9;
  width: 100%;
}

:global(.ProseMirror-selectednode) :global(iframe) {
  transition: outline 0.15s;
  outline: 6px solid #fbbf24;
}

@media only screen and (max-width: 480px) {
  :global(div[data-youtube-video]) > :global(iframe) {
    max-height: 50px;
  }
}

@media only screen and (max-width: 720px) {
  :global(div[data-youtube-video]) > :global(iframe) {
    max-height: 100px;
  }
}

/* CSS for bold coloring and highlighting issue*/
:global(span[style]) > :global(strong) {
  color: inherit;
}

:global(mark[style]) > :global(strong) {
  color: inherit;
}